<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="cd6b9c06-3b2b-4ae1-98a4-4c40d7b632ca" name="Default" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/karabiner_gen/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="165">
              <caret line="129" column="70" lean-forward="true" selection-start-line="129" selection-start-column="70" selection-end-line="129" selection-end-column="70" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="README.md" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/README.md">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="210">
              <caret line="14" column="1" lean-forward="false" selection-start-line="14" selection-start-column="1" selection-end-line="14" selection-end-column="1" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="264">
              <caret line="6667" column="6" lean-forward="false" selection-start-line="6667" selection-start-column="6" selection-end-line="6667" selection-end-column="6" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="jar://$MAVEN_REPOSITORY$/cheshire/cheshire/5.8.0/cheshire-5.8.0.jar!/cheshire/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="268">
              <caret line="48" column="6" lean-forward="false" selection-start-line="48" selection-start-column="6" selection-end-line="48" selection-end-column="6" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="project.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="90">
              <caret line="6" column="22" lean-forward="false" selection-start-line="6" selection-start-column="22" selection-end-line="6" selection-end-column="22" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>:selected</find>
    </findStrings>
  </component>
  <component name="GradleLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/src/karabiner_gen/core.clj" />
        <option value="$PROJECT_DIR$/README.md" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="y" value="23" />
    <option name="width" value="1389" />
    <option name="height" value="877" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="PackagesPane" />
      <pane id="AndroidView" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="karabiner-gen" type="b2602c69:ProjectViewProjectNode" />
              <item name="karabiner-gen" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="karabiner-gen" type="b2602c69:ProjectViewProjectNode" />
              <item name="karabiner-gen" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="karabiner-gen" type="b2602c69:ProjectViewProjectNode" />
              <item name="karabiner-gen" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="karabiner_gen" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="karabiner-gen" type="b2602c69:ProjectViewProjectNode" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scratches" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="ReplState" timestamp="1514815934250">{:repl-history {:ide [], :local [{:command &quot;(ns karabiner-gen.core\n  (:require [cheshire.core :refer [generate-string]]))&quot;, :offset 77, :ns &quot;user&quot;} {:command &quot;(spit \&quot;~/.config/karabiner/test.json\&quot;\n        (generate-string config))&quot;, :offset 71, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(spit \&quot;/Users/david/.config/karabiner/test.json\&quot;\n        (generate-string config))&quot;, :offset 82, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def config\n  {:global {\&quot;check_for_updates_on_startup\&quot;  true\n            \&quot;show_in_menu_bar\&quot;              true,\n            \&quot;show_profile_name_in_menu_bar\&quot; false}\n   :profiles\n           [{:name                  \&quot;capsvim2\&quot;\n             :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                                     :keyboard_type                \&quot;ansi\&quot;}\n             :simple_modifications  [{:from {:key_code \&quot;caps_lock\&quot;}\n                                      :to   {:key_code \&quot;left_control\&quot;}}]\n             :complex_modifications {:parameters {}\n                                     :rules      [{:description  \&quot;bla bla\&quot;\n                                                   :manipulators [{:type \&quot;basic\&quot;\n                                                                   :from {:key_code  \&quot;h\&quot;\n                                                                          :modifiers {:mandatory \&quot;left_control\&quot;}}\n                                                                   :to   {:key_code \&quot;left_arrow\&quot;}}\n                                                                  {:type \&quot;basic\&quot;\n                                                                   :from {:key_code  \&quot;j\&quot;\n                                                                          :modifiers {:mandatory \&quot;left_control\&quot;}}\n                                                                   :to   {:key_code \&quot;down_arrow\&quot;}}\n                                                                  {:type \&quot;basic\&quot;\n                                                                   :from {:key_code  \&quot;k\&quot;\n                                                                          :modifiers {:mandatory \&quot;left_control\&quot;}}\n                                                                   :to   {:key_code \&quot;up_arrow\&quot;}}\n                                                                  {:type \&quot;basic\&quot;\n                                                                   :from {:key_code  \&quot;l\&quot;\n                                                                          :modifiers {:mandatory \&quot;left_control\&quot;}}\n                                                                   :to   {:key_code \&quot;right_arrow\&quot;}}]}]}}]})&quot;, :offset 2172, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def config\n  {:global {\&quot;check_for_updates_on_startup\&quot;  true\n            \&quot;show_in_menu_bar\&quot;              true,\n            \&quot;show_profile_name_in_menu_bar\&quot; false}\n   :profiles\n           [{:name                  \&quot;capsvim2\&quot;\n             :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                                     :keyboard_type                \&quot;ansi\&quot;}\n             :simple_modifications  [{:from {:key_code \&quot;caps_lock\&quot;}\n                                      :to   {:key_code \&quot;left_control\&quot;}}]\n             :complex_modifications {:parameters {}\n                                     :rules      [{:description  \&quot;bla bla\&quot;\n                                                   :manipulators [{:type \&quot;basic\&quot;\n                                                                   :from {:key_code  \&quot;h\&quot;\n                                                                          :modifiers {:mandatory \&quot;left_control\&quot;}}\n                                                                   :to   [{:key_code \&quot;left_arrow\&quot;}]}\n                                                                  {:type \&quot;basic\&quot;\n                                                                   :from {:key_code  \&quot;j\&quot;\n                                                                          :modifiers {:mandatory \&quot;left_control\&quot;}}\n                                                                   :to   [{:key_code \&quot;down_arrow\&quot;}]}\n                                                                  {:type \&quot;basic\&quot;\n                                                                   :from {:key_code  \&quot;k\&quot;\n                                                                          :modifiers {:mandatory \&quot;left_control\&quot;}}\n                                                                   :to   [{:key_code \&quot;up_arrow\&quot;}]}\n                                                                  {:type \&quot;basic\&quot;\n                                                                   :from {:key_code  \&quot;l\&quot;\n                                                                          :modifiers {:mandatory \&quot;left_control\&quot;}}\n                                                                   :to   [{:key_code \&quot;right_arrow\&quot;}]}]}]}}]})&quot;, :offset 2180, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(spit \&quot;/Users/david/.config/karabiner/karabiner.json\&quot;\n        (generate-string config))&quot;, :offset 87, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(spit \&quot;/Users/david/.config/karabiner/karabiner.json\&quot;\n        (generate-string\n          (-&gt; config\n              (update :profiles conj capsvim-profile)\n              (update :profiles conj chord-profile))))&quot;, :offset 208, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def chord-profile\n  {:name                  \&quot;chord\&quot;\n   :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                           :keyboard_type                \&quot;ansi\&quot;}\n   :complex_modifications {:parameters {}\n                           :rules      [{:description  \&quot;blah\&quot;\n                                         :manipulators [{:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;caps_lock\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;x\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;xs\&quot; :value 0}}]}]}]}})&quot;, :offset 694, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def chord-profile\n  {:name                  \&quot;chord\&quot;\n   :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                           :keyboard_type                \&quot;ansi\&quot;}\n   :complex_modifications {:parameters {}\n                           :rules      [{:description  \&quot;blah\&quot;\n                                         :manipulators [{:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;caps_lock\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;x\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;x\&quot; :value 0}}]}]}]}})&quot;, :offset 693, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def chord-profile\n  {:name                  \&quot;chord\&quot;\n   :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                           :keyboard_type                \&quot;ansi\&quot;}\n   :complex_modifications {:parameters {}\n                           :rules      [{:description  \&quot;blah\&quot;\n                                         :manipulators [{:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;caps_lock\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;x\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;x\&quot; :value 0}}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;a\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;a\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;a\&quot; :value 0}}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from            {:key_code \&quot;s\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;as\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;as\&quot; :value 0}}]}]}]}})&quot;, :offset 1612, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def chord-profile\n  {:name                  \&quot;chord\&quot;\n   :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                           :keyboard_type                \&quot;ansi\&quot;}\n   :complex_modifications {:parameters {}\n                           :rules      [{:description  \&quot;blah\&quot;\n                                         :manipulators [{:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;caps_lock\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;x\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;x\&quot; :value 0}}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_unless\&quot;, :name \&quot;s\&quot;, :value 1}]\n                                                         :from            {:key_code \&quot;a\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;a\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;a\&quot; :value 0}}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_unless\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from            {:key_code \&quot;s\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;s\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;s\&quot; :value 0}}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;s\&quot;, :value 1}]\n                                                         :from            {:key_code \&quot;a\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;as\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;as\&quot; :value 0}}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from            {:key_code \&quot;s\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;as\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;as\&quot; :value 0}}]}\n\n                                                        ]}]}})&quot;, :offset 2835, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def chord-profile\n  {:name                  \&quot;chord\&quot;\n   :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                           :keyboard_type                \&quot;ansi\&quot;}\n   :complex_modifications {:parameters {}\n                           :rules      [{:description  \&quot;blah\&quot;\n                                         :manipulators [{:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;caps_lock\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;x\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;x\&quot; :value 0}}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_unless\&quot;, :name \&quot;s\&quot;, :value 1}]\n                                                         :from            {:key_code \&quot;a\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;a\&quot; :value 1}}]\n                                                         :to_if_alone     [{:key_code \&quot;a\&quot;}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;a\&quot; :value 0}}]}\n                                                         {:type            \&quot;basic\&quot;\n                                                          :conditions      [{:type \&quot;variable_unless\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                          :from            {:key_code \&quot;s\&quot;}\n                                                          :to              [{:set_variable {:name \&quot;s\&quot; :value 1}}]\n                                                          :to_if_alone     [{:key_code \&quot;s\&quot;}]\n                                                          :to_after_key_up [{:set_variable {:name \&quot;s\&quot; :value 0}}]}\n                                                                          {:type            \&quot;basic\&quot;\n                                                                           :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;s\&quot;, :value 1}]\n                                                                           :from            {:key_code \&quot;a\&quot;}\n                                                                           :to              [{:set_variable {:name \&quot;as\&quot; :value 1}}]\n                                                                           :to_after_key_up [{:set_variable {:name \&quot;as\&quot; :value 0}}]}\n                                                         {:type            \&quot;basic\&quot;\n                                                          :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                          :from            {:key_code \&quot;s\&quot;}\n                                                          :to              [{:set_variable {:name \&quot;as\&quot; :value 1}}]\n                                                          :to_after_key_up [{:set_variable {:name \&quot;as\&quot; :value 0}}]}\n\n                                                        ]}]}})&quot;, :offset 3120, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def chord-profile\n  {:name                  \&quot;chord\&quot;\n   :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                           :keyboard_type                \&quot;ansi\&quot;}\n   :complex_modifications {:parameters {}\n                           :rules      [{:description  \&quot;blah\&quot;\n                                         :manipulators [{:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;caps_lock\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;x\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;x\&quot; :value 0}}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_unless\&quot;, :name \&quot;s\&quot;, :value 1}]\n                                                         :from            {:key_code \&quot;a\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;a\&quot; :value 1}}]\n                                                         :to_if_alone     [{:key_code \&quot;a\&quot;}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;a\&quot; :value 0}}]}\n                                                         {:type            \&quot;basic\&quot;\n                                                          :conditions      [{:type \&quot;variable_unless\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                          :from            {:key_code \&quot;s\&quot;}\n                                                          :to              [{:set_variable {:name \&quot;s\&quot; :value 1}}]\n                                                          :to_if_alone     [{:key_code \&quot;s\&quot;}]\n                                                          :to_after_key_up [{:set_variable {:name \&quot;s\&quot; :value 0}}]}\n                                                                          {:type            \&quot;basic\&quot;\n                                                                           :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;s\&quot;, :value 1}]\n                                                                           :from            {:key_code \&quot;a\&quot;}\n                                                                           :to              [{:set_variable {:name \&quot;as\&quot; :value 1}}]\n                                                                           :to_after_key_up [{:set_variable {:name \&quot;as\&quot; :value 0}}]}\n                                                         {:type            \&quot;basic\&quot;\n                                                          :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                          :from            {:key_code \&quot;s\&quot;}\n                                                          :to              [{:set_variable {:name \&quot;as\&quot; :value 1}}]\n                                                          :to_after_key_up [{:set_variable {:name \&quot;as\&quot; :value 0}}]}\n\n                                                        {:type            \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;as\&quot;, :value 1}]\n                                                         :from            {:key_code \&quot;i\&quot;}\n                                                         :to              [{:key_code \&quot;i\&quot;\n                                                                            :modifiers [\&quot;left_command\&quot; \&quot;left_option\&quot; \&quot;left_control\&quot; \&quot;left_shift\&quot;]}]}\n                                                        ]}]}})&quot;, :offset 3651, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def chord-profile\n  {:name                  \&quot;chord\&quot;\n   :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                           :keyboard_type                \&quot;ansi\&quot;}\n   :complex_modifications {:parameters {}\n                           :rules      [{:description  \&quot;blah\&quot;\n                                         :manipulators [{:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;caps_lock\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;snap\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;snap\&quot; :value 0}}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_unless\&quot;, :name \&quot;s\&quot;, :value 1}]\n                                                         :from            {:key_code \&quot;a\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;a\&quot; :value 1}}]\n                                                         :to_if_alone     [{:key_code \&quot;a\&quot;}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;a\&quot; :value 0}}]}\n                                                         {:type            \&quot;basic\&quot;\n                                                          :conditions      [{:type \&quot;variable_unless\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                          :from            {:key_code \&quot;s\&quot;}\n                                                          :to              [{:set_variable {:name \&quot;s\&quot; :value 1}}]\n                                                          :to_if_alone     [{:key_code \&quot;s\&quot;}]\n                                                          :to_after_key_up [{:set_variable {:name \&quot;s\&quot; :value 0}}]}\n                                                                          {:type            \&quot;basic\&quot;\n                                                                           :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;s\&quot;, :value 1}]\n                                                                           :from            {:key_code \&quot;a\&quot;}\n                                                                           :to              [{:set_variable {:name \&quot;as\&quot; :value 1}}]\n                                                                           :to_after_key_up [{:set_variable {:name \&quot;as\&quot; :value 0}}]}\n                                                         {:type            \&quot;basic\&quot;\n                                                          :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                          :from            {:key_code \&quot;s\&quot;}\n                                                          :to              [{:set_variable {:name \&quot;as\&quot; :value 1}}]\n                                                          :to_after_key_up [{:set_variable {:name \&quot;as\&quot; :value 0}}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;as\&quot;, :value 1}]\n                                                         :from            {:key_code \&quot;i\&quot;}\n                                                         :to              [{:key_code \&quot;i\&quot;\n                                                                            :modifiers [\&quot;left_command\&quot; \&quot;left_option\&quot; \&quot;left_control\&quot; \&quot;left_shift\&quot;]}]}\n\n                                                        {:type \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;snap\&quot;, :value 1}]\n                                                         :from {:key_code  \&quot;h\&quot;}\n                                                         :to   [{:key_code \&quot;left_arrow\&quot;}]}\n                                                        {:type \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;snap\&quot;, :value 1}]\n                                                         :from {:key_code  \&quot;j\&quot;}\n                                                         :to   [{:key_code \&quot;down_arrow\&quot;}]}\n                                                        {:type \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;snap\&quot;, :value 1}]\n                                                         :from {:key_code  \&quot;k\&quot;}\n                                                         :to   [{:key_code \&quot;up_arrow\&quot;}]}\n                                                        {:type \&quot;basic\&quot;\n                                                         :conditions      [{:type \&quot;variable_if\&quot;, :name \&quot;snap\&quot;, :value 1}]\n                                                         :from {:key_code  \&quot;l\&quot;}\n                                                         :to   [{:key_code \&quot;right_arrow\&quot;}]}\n                                                        ]}]}})&quot;, :offset 5112, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(spit \&quot;/Users/david/.config/karabiner/karabiner.json\&quot;\n        (generate-string\n          (-&gt; config\n              (update :profiles conj capsvim-profile)\n              (update :profiles conj chord-profile))\n          {:pretty true}))&quot;, :offset 233, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def super-profile\n  {:name                  \&quot;super\&quot;\n   :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                           :keyboard_type                \&quot;ansi\&quot;}\n   :complex_modifications {:parameters {}\n                           :rules      [{:description  \&quot;bla bla\&quot;\n                                         :manipulators [{:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;a\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;a\&quot; :value 1}}]\n                                                         :to_if_alone     [{:key_code \&quot;a\&quot;}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;a\&quot; :value 0}}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;h\&quot;}\n                                                         :to         [{:key_code \&quot;left_arrow\&quot;}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;j\&quot;}\n                                                         :to         [{:key_code \&quot;down_arrow\&quot;}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;k\&quot;}\n                                                         :to         [{:key_code \&quot;up_arrow\&quot;}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;l\&quot;}\n                                                         :to         [{:key_code \&quot;right_arrow\&quot;}]}\n                                                        ]}]}})&quot;, :offset 2328, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def super-profile\n  {:name                  \&quot;super\&quot;\n   :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                           :keyboard_type                \&quot;ansi\&quot;}\n   :complex_modifications {:parameters {}\n                           :rules      [{:description  \&quot;bla bla\&quot;\n                                         :manipulators [{:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;a\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;a\&quot; :value 1}}]\n                                                         :to_if_alone     [{:key_code \&quot;a\&quot;}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;a\&quot; :value 0}}]\n                                                         :parameters      {\&quot;basic.to_if_alone_timeout_milliseconds\&quot; 100}}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;h\&quot;}\n                                                         :to         [{:key_code \&quot;left_arrow\&quot;}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;j\&quot;}\n                                                         :to         [{:key_code \&quot;down_arrow\&quot;}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;k\&quot;}\n                                                         :to         [{:key_code \&quot;up_arrow\&quot;}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;l\&quot;}\n                                                         :to         [{:key_code \&quot;right_arrow\&quot;}]}\n                                                        ]}]}})&quot;, :offset 2449, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(def super-profile\n  {:name                  \&quot;super\&quot;\n   :virtual_hid_keyboard  {:caps_lock_delay_milliseconds 0\n                           :keyboard_type                \&quot;ansi\&quot;}\n   :complex_modifications {:parameters {}\n                           :rules      [{:description  \&quot;bla bla\&quot;\n                                         :manipulators [{:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;a\&quot;}\n                                                         :to              [{:key_code \&quot;a\&quot;}]\n                                                         :to_if_held_down [{:set_variable {:name \&quot;a\&quot; :value 1}}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;a\&quot; :value 0}}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;h\&quot;}\n                                                         :to         [{:key_code \&quot;left_arrow\&quot;}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;j\&quot;}\n                                                         :to         [{:key_code \&quot;down_arrow\&quot;}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;k\&quot;}\n                                                         :to         [{:key_code \&quot;up_arrow\&quot;}]}\n                                                        {:type       \&quot;basic\&quot;\n                                                         :conditions [{:type \&quot;variable_if\&quot;, :name \&quot;a\&quot;, :value 1}]\n                                                         :from       {:key_code \&quot;l\&quot;}\n                                                         :to         [{:key_code \&quot;right_arrow\&quot;}]}\n                                                        {:type            \&quot;basic\&quot;\n                                                         :from            {:key_code \&quot;f\&quot;}\n                                                         :to              [{:set_variable {:name \&quot;a\&quot; :value 1}}]\n                                                         :to_if_alone     [{:key_code \&quot;a\&quot;}]\n                                                         :to_after_key_up [{:set_variable {:name \&quot;a\&quot; :value 0}}]\n                                                         :parameters      {\&quot;basic.to_if_alone_timeout_milliseconds\&quot; 100}}\n                                                        ]}]}})&quot;, :offset 2940, :ns &quot;karabiner-gen.core&quot;} {:command &quot;(spit \&quot;/Users/david/.config/karabiner/karabiner.json\&quot;\n        (generate-string\n          (-&gt; config\n              (update :profiles conj capsvim-profile)\n              (update :profiles conj super-profile)\n              (update :profiles conj chord-profile))\n          {:pretty true}))&quot;, :offset 285, :ns &quot;karabiner-gen.core&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.REPL">
    <configuration name="REPL" type="ClojureREPL" factoryName="Local">
      <setting name="replType" value="1" />
      <module name="karabiner-gen" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
    </configuration>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="cd6b9c06-3b2b-4ae1-98a4-4c40d7b632ca" name="Default" comment="" />
      <created>1514482691834</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1514482691834</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="23" width="1389" height="877" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.23974082" sideWeight="0.50479615" order="3" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.22030237" sideWeight="0.49520382" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.24982001" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="1" />
    </breakpoint-manager>
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/karabiner_gen/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="100005">
          <caret line="6667" column="6" lean-forward="false" selection-start-line="6667" selection-start-column="6" selection-end-line="6667" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/cheshire/cheshire/5.8.0/cheshire-5.8.0.jar!/cheshire/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="720">
          <caret line="48" column="6" lean-forward="false" selection-start-line="48" selection-start-column="6" selection-end-line="48" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="22" lean-forward="false" selection-start-line="6" selection-start-column="22" selection-end-line="6" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="264">
          <caret line="6667" column="6" lean-forward="false" selection-start-line="6667" selection-start-column="6" selection-end-line="6667" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/cheshire/cheshire/5.8.0/cheshire-5.8.0.jar!/cheshire/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="268">
          <caret line="48" column="6" lean-forward="false" selection-start-line="48" selection-start-column="6" selection-end-line="48" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="22" lean-forward="false" selection-start-line="6" selection-start-column="22" selection-end-line="6" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/karabiner_gen/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="165">
          <caret line="129" column="70" lean-forward="true" selection-start-line="129" selection-start-column="70" selection-end-line="129" selection-end-column="70" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="210">
          <caret line="14" column="1" lean-forward="false" selection-start-line="14" selection-start-column="1" selection-end-line="14" selection-end-column="1" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>